@{
    ViewData["Title"] = "Member Home";
    Layout = "~/Views/Shared/_LayoutUser.cshtml";
    var user = ViewBag.User;
    var recentTransactions = ViewBag.RecentTransactions as List<MyPocket.Shared.ViewModels.TransactionViewModel>;
    var announcements = ViewBag.Announcements as List<MyPocket.Core.Models.Announcement>;
    var userSubscriptions = user?.UserSubscriptions as IEnumerable<dynamic>;
    var activeSubscription = userSubscriptions != null
        ? userSubscriptions.Any((Func<dynamic, bool>)(us => us.Status == "Active" && us.EndDate > DateTime.UtcNow))
        : false;
}
<div class="container py-4">
    <div class="row mb-4">
        <div class="col-md-12">
            <h2 class="fw-bold">Welcome, @user?.Nickname!</h2>
            <div class="text-muted">Last Login: @user?.LastLoginDate.ToString("yyyy-MM-dd HH:mm")</div>
        </div>
    </div>
    <div class="row mb-4">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header bg-primary text-white">Quick Access</div>
                <div class="card-body d-flex flex-wrap gap-3">
                    <a class="btn btn-outline-success" asp-area="User" asp-controller="Transactions" asp-action="Index">Transactions</a>
                    <a class="btn btn-outline-info" asp-area="User" asp-controller="Categories" asp-action="Index">Categories</a>
                    <a class="btn btn-outline-warning" asp-area="User" asp-controller="Budgets" asp-action="Index">Budgets</a>
                    <a class="btn btn-outline-secondary" asp-area="User" asp-controller="SavingGoals" asp-action="Index">Saving Goals</a>
                    @if (activeSubscription == true)
                    {
                        <a class="btn btn-outline-primary" asp-area="User" asp-controller="PaidMember" asp-action="Index">Premium Area</a>
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="row mb-4">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header bg-secondary text-white">Latest Announcements</div>
                <div class="card-body">
                    @if (announcements != null && announcements.Count > 0)
                    {
                        foreach (var ann in announcements)
                        {
                            <div class="mb-3">
                                <h5 class="fw-bold">@ann.Title</h5>
                                <div class="text-muted small">Published: @ann.PublishDate.ToString("yyyy-MM-dd HH:mm")</div>
                                <div>@ann.Content</div>
                                <hr />
                            </div>
                        }
                    }
                    else
                    {
                        <div class="text-muted">No announcements available.</div>
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="row mb-4">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header bg-success text-white d-flex justify-content-between align-items-center">
                    <span>Recent Transactions</span>
                    <small class="text-white-50">(Past & Future)</small>
                </div>
                <div class="card-body">
                    @if (recentTransactions != null && recentTransactions.Any())
                    {
                        <div class="text-muted mb-3">Showing 10 most recent transactions (including future scheduled transactions)</div>
                        <ul class="list-group">
                            @foreach (var txVm in recentTransactions
                                .OrderByDescending(t => t.Transaction.TransactionDate))
                            {
                                var isFuture = txVm.Transaction.TransactionDate > DateTime.Now;
                                <li class="list-group-item d-flex justify-content-between align-items-center @(isFuture ? "bg-light" : "")">
                                    <span>
                                        @txVm.Transaction.TransactionDate.ToString("MM-dd HH:mm")
                                        @if (isFuture)
                                        {
                                            <small class="text-muted">(Scheduled)</small>
                                        }
                                    </span>
                                    <span>@txVm.CategoryName</span>
                                    <span class="fw-bold">@txVm.Transaction.Amount.ToString("N0")</span>
                                    <span class="badge bg-@(txVm.Transaction.TransactionType == "Income" ? "success" : "danger")">
                                        @txVm.Transaction.TransactionType
                                    </span>
                                </li>
                            }
                        </ul>
                    }
                    else
                    {
                        <div class="text-muted">No transactions available.</div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>