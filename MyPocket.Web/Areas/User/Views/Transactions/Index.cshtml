@model IEnumerable<MyPocket.Core.Models.Transaction>
@{
    ViewData["Title"] = "Transactions";
    var incomeList = Model.Where(x => x.TransactionType.Trim() == "收入").ToList();
    var expenseList = Model.Where(x => x.TransactionType.Trim() == "支出").ToList();
    var totalIncome = incomeList.Sum(x => x.Amount);
    var totalExpense = expenseList.Sum(x => x.Amount);
    var balance = totalIncome - totalExpense;
    var expenseByCategory = expenseList
        .GroupBy(x => x.Category.CategoryName)
        .Select(g => new { Category = g.Key, Amount = g.Sum(x => x.Amount) })
        .ToList();
    var now = DateTime.UtcNow;
    var budgets = ViewBag.Budgets as List<MyPocket.Shared.ViewModels.Budgets.BudgetViewModel>;
    var totalBudget = budgets?.Sum(b => b.Amount) ?? 0;
    var totalBudgetSpent = budgets?.Sum(b => b.Spent) ?? 0;
    var totalBudgetRemaining = totalBudget - totalBudgetSpent;
    var percent = totalBudget == 0 ? 0 : Math.Min(100, (int)((totalBudgetSpent / totalBudget) * 100));
    var savingGoals = ViewBag.SavingGoals as List<MyPocket.Core.Models.SavingGoal>;
    var selectedGoal = savingGoals?.FirstOrDefault();
    var savingPercent = (selectedGoal != null && selectedGoal.TargetAmount > 0) ? Math.Min(100, (int)((selectedGoal.CurrentAmount / selectedGoal.TargetAmount) * 100)) : 0;
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css" rel="stylesheet">

<style>
    .hover-shadow:hover {
        transform: translateY(-3px);
        box-shadow: 0 4px 25px rgba(0,0,0,.1) !important;
        transition: all .3s ease;
    }

    .stat-card {
        border-radius: 15px;
        border: none;
        transition: all .3s ease;
    }

    .stat-icon {
        font-size: 2rem;
        height: 60px;
        width: 60px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0 auto 1rem;
    }

    .progress {
        border-radius: 10px;
        background-color: rgba(0,0,0,.05);
    }

    .progress-bar {
        border-radius: 10px;
    }

    .custom-btn {
        border-radius: 20px;
        padding: 8px 20px;
        transition: all .3s ease;
    }

        .custom-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(0,0,0,.1);
        }

    .card {
        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.05);
    }

    .list-group-item {
        border: none;
        padding: 0.75rem 0;
    }

        .list-group-item:not(:last-child) {
            border-bottom: 1px solid rgba(0,0,0,.05);
        }

    .expense-category-list {
        height: 390px;
        overflow-y: auto;
        margin-right: -1rem;
        padding-right: 1rem;
        scroll-behavior: smooth;
    }

        .expense-category-list::-webkit-scrollbar {
            width: 4px;
        }

        .expense-category-list::-webkit-scrollbar-track {
            background: #f8f9fa;
            border-radius: 2px;
        }

        .expense-category-list::-webkit-scrollbar-thumb {
            background: #dee2e6;
            border-radius: 2px;
        }

            .expense-category-list::-webkit-scrollbar-thumb:hover {
                background: #adb5bd;
            }

        .expense-category-list .list-group-item {
            padding: 0.6rem 0;
        }

    .chart-container {
        height: 390px;
        width: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
        position: relative;
    }

    #expensePieChart {
        max-width: 100%;
        height: 100% !important;
    }
</style>

<div class="container py-4">
    <div class="row mb-4">
        <div class="col-md-8 mb-3 mb-md-0">
            <div class="card stat-card shadow-sm mb-3 hover-shadow">
                <div class="card-body d-flex justify-content-around align-items-center p-4">
                    <div class="text-center">
                        <div class="stat-icon bg-success bg-opacity-10">
                            <i class="bi bi-arrow-down-circle text-success"></i>
                        </div>
                        <div class="fw-bold text-success" style="font-size:1.2rem">Total Income</div>
                        <div class="fs-4 fw-bold text-success">NT$@totalIncome.ToString("#,##0")</div>
                    </div>
                    <div class="text-center">
                        <div class="stat-icon bg-danger bg-opacity-10">
                            <i class="bi bi-arrow-up-circle text-danger"></i>
                        </div>
                        <div class="fw-bold text-danger" style="font-size:1.2rem">Total Expense</div>
                        <div class="fs-4 fw-bold text-danger">NT$@totalExpense.ToString("#,##0")</div>
                    </div>
                    <div class="text-center">
                        <div class="stat-icon bg-primary bg-opacity-10">
                            <i class="bi bi-cash-stack text-primary"></i>
                        </div>
                        <div class="fw-bold text-primary" style="font-size:1.2rem">Balance</div>
                        <div class="fs-4 fw-bold text-primary">NT$@balance.ToString("#,##0")</div>
                    </div>
                </div>
            </div>
            <div class="card stat-card shadow-sm mb-3 hover-shadow">
                <div class="card-body p-4">
                    <div class="row">
                        <div class="col-md-7">
                            <div class="chart-container">
                                <canvas id="expensePieChart"></canvas>
                            </div>
                        </div>
                        <div class="col-md-5 align-self-center">
                            <div class="fw-bold mb-3">
                                <i class="bi bi-pie-chart-fill me-2"></i>Expense by Category
                            </div>
                            <div class="expense-category-list">
                                <ul class="list-group list-group-flush">
                                    @foreach (var item in expenseByCategory)
                                    {
                                        <li class="list-group-item d-flex justify-content-between align-items-center">
                                            <span><i class="bi bi-tag me-2 text-muted"></i>@item.Category</span>
                                            <span class="fw-bold">NT$@item.Amount.ToString("#,##0")</span>
                                        </li>
                                    }
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card stat-card shadow-sm mb-3 hover-shadow">
                <div class="card-body text-center p-4">
                    <div class="stat-icon bg-primary bg-opacity-10">
                        <i class="bi bi-wallet2 text-primary"></i>
                    </div>
                    <div class="fw-bold mb-2">Monthly Budget</div>
                    <div class="fs-4 fw-bold">NT$@totalBudget.ToString("#,##0")</div>
                    <div class="mb-3">
                        <div class="text-danger mb-1">
                            <i class="bi bi-dash-circle me-1"></i>Spent: NT$@totalBudgetSpent.ToString("#,##0")
                        </div>
                        <div class="text-success">
                            <i class="bi bi-plus-circle me-1"></i>Remaining: NT$@totalBudgetRemaining.ToString("#,##0")
                        </div>
                    </div>
                    <div class="progress mb-3" style="height: 1.2rem;">
                        <div class="progress-bar @(totalBudgetSpent > totalBudget ? "bg-danger" : "bg-primary")"
                             role="progressbar" style="width: @percent%" aria-valuenow="@percent"
                             aria-valuemin="0" aria-valuemax="100">
                            @percent%
                        </div>
                    </div>
                    <a href="@Url.Action("Index", "Budgets", new { area = "User" })"
                       class="btn btn-outline-primary btn-sm custom-btn">
                        <i class="bi bi-gear me-1"></i>Manage Budget
                    </a>
                </div>
            </div>
            <div class="card stat-card shadow-sm mb-3 hover-shadow">
                <div class="card-body text-center p-4">
                    <div class="stat-icon bg-success bg-opacity-10">
                        <i class="bi bi-piggy-bank text-success"></i>
                    </div>
                    <div class="fw-bold mb-3">Saving Goals Progress</div>
                    @if (selectedGoal != null)
                    {
                        <div class="mb-2">
                            <i class="bi bi-bullseye me-1"></i>@selectedGoal.GoalName
                        </div>
                        <div class="mb-2">
                            Target Amount: <span class="fw-bold">NT$@selectedGoal.TargetAmount.ToString("#,##0")</span>
                        </div>
                        <div class="mb-2">
                            Current Amount: <span class="fw-bold">NT$@selectedGoal.CurrentAmount.ToString("#,##0")</span>
                        </div>
                        <div class="progress mb-3" style="height: 1.2rem;">
                            <div class="progress-bar @(savingPercent >= 100 ? "bg-success" : "bg-info")"
                                 role="progressbar" style="width: @savingPercent%"
                                 aria-valuenow="@savingPercent" aria-valuemin="0" aria-valuemax="100">
                                @savingPercent%
                            </div>
                        </div>
                        @if (savingPercent >= 100)
                        {
                            <div class="alert alert-success mt-3">
                                <i class="bi bi-trophy me-2"></i>Congratulations! Goal Achieved!
                            </div>
                        }
                        <a href="@Url.Action("Index", "SavingGoals", new { area = "User" })"
                           class="btn btn-outline-success btn-sm custom-btn">
                            <i class="bi bi-gear me-1"></i>Manage Goals
                        </a>
                    }
                    else
                    {
                        <div class="text-muted mb-3">
                            <i class="bi bi-info-circle me-1"></i>No saving goals set
                        </div>
                        <a href="@Url.Action("Index", "SavingGoals", new { area = "User" })"
                           class="btn btn-outline-success btn-sm custom-btn">
                            <i class="bi bi-plus me-1"></i>Add Goal
                        </a>
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            @await Html.PartialAsync("CreatePartial", Model)
        </div>
        <div class="col-md-8">
            @await Html.PartialAsync("ListPartial", Model)
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        const ctx = document.getElementById('expensePieChart').getContext('2d');
        const data = {
            labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(expenseByCategory.Select(x => x.Category).ToList())),
            datasets: [{
                data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(expenseByCategory.Select(x => x.Amount).ToList())),
                backgroundColor: [
                    '#f87171', '#fbbf24', '#34d399', '#60a5fa', '#a78bfa', '#f472b6', '#facc15', '#38bdf8', '#4ade80', '#fca5a5'
                ],
                borderWidth: 1
            }]
        };
        new Chart(ctx, {
            type: 'pie',
            data: data,
            options: {
                responsive: true,
                maintainAspectRatio: false,
                layout: {
                    padding: 20
                },
                plugins: {
                    legend: {
                        position: 'right',
                        align: 'center',
                        labels: {
                            padding: 15,
                            font: {
                                size: 12
                            }
                        }
                    },
                    title: {
                        display: true,
                        text: 'Expenses by Category',
                        font: {
                            size: 16
                        },
                        padding: {
                            top: 10,
                            bottom: 20
                        }
                    }
                }
            }
        });
    </script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}